name: scrape-flipmilhas

on:
  schedule:
    - cron: "*/30 * * * *"
  workflow_dispatch:

jobs:
  run:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    env:
      TZ: America/Sao_Paulo
    concurrency:
      group: scrape-commit
      cancel-in-progress: false

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      # 1) Chrome
      - uses: browser-actions/setup-chrome@v1
        id: chrome

      # 2) Chromedriver que casa com o Chrome acima
      - uses: browser-actions/setup-chromedriver@v1
        id: chromedriver
        with:
          chrome-version: ${{ steps.chrome.outputs.chrome-version }}

      # 3) Remove o chromedriver velho (139) do PATH pra não conflitar
      - name: Remove stock chromedriver from PATH
        run: |
          sudo rm -f /usr/bin/chromedriver || true

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          python -m pip install "selenium>=4.24.0" "openpyxl>=3.1.2"

      - name: Sanity check
        run: |
          which google-chrome || true
          echo "Chrome:  ${{ steps.chrome.outputs.chrome-version }}"
          echo "Driver:  ${{ steps.chromedriver.outputs.chromedriver-version }}"
          ls -l "${{ steps.chromedriver.outputs.chromedriver-path }}"

      - name: Run scraper (gera output/FLIPMILHAS.xlsx na raiz)
        env:
          CHROME_PATH: ${{ steps.chrome.outputs.chrome-path }}
          CHROMEDRIVER_PATH: ${{ steps.chromedriver.outputs.chromedriver-path }}
        run: |
          python flipmilhas_scraper_gha.py --headless --once

      - name: Commit cópia com timestamp local em data/
        run: |
          mkdir -p data
          ts=$(date +'%Y%m%d_%H%M%S')
          cp output/FLIPMILHAS.xlsx "data/FLIPMILHAS_${ts}.xlsx"
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          export GIT_AUTHOR_DATE="$(date -R)"
          export GIT_COMMITTER_DATE="$(date -R)"
          git add data/*.xlsx
          git commit -m "Atualiza FLIPMILHAS.xlsx (${ts}) [localtime]" || echo "Sem mudanças"

      - name: Pull (rebase) e Push
        env:
          BRANCH: ${{ github.ref_name }}
        run: |
          git fetch origin "$BRANCH"
          git pull --rebase origin "$BRANCH" || true
          git push origin HEAD:"$BRANCH"

      - name: Upload artifact (planilha)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: FLIPMILHAS-planilha
          path: output/FLIPMILHAS.xlsx
